devtools::load_all()
devtools::document()
devtools::test()
credential_realties <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
credential_realties
credential_realties <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
collection =  "realties"
)
devtools::load_all()
devtools::document()
credential_realties <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
collection =  "realties"
)
credential_realties <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
credential_realties <-
es.variable(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
credential_realties <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
variables <-
es.variable(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
variables
variables <-
es.variable(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
variables
user = "normalizador"
passwd = "ND2SjGE+41E=@"
find_search = "search"
database =  "mapi.digital"
table =  "realties"
path_es <-
paste0("https://") %>%
paste0(user) %>%
paste0(":") %>%
paste0(passwd) %>%
paste0(find_search) %>%
paste0(".") %>%
paste0(store) %>%
paste0("/elasticsearch/admin/") %>%
paste0(data_collection) %>%
paste0("/_mapping")
path_es <-
paste0("https://") %>%
paste0(user) %>%
paste0(":") %>%
paste0(passwd) %>%
paste0(find_search) %>%
paste0(".") %>%
paste0(database) %>%
paste0("/elasticsearch/admin/") %>%
paste0(table) %>%
paste0("/_mapping")
res_conf <-
httr::GET(
url = path_es,
httr::timeout(10000),
encode = "json", # this lets' httr do the work for you
httr::content_type_json(), # easier than making a header yoursel
httr::verbose()
)
list_cont <- httr::content(res_conf, as = "text")
list_cont_df <- jsonlite::fromJSON(list_cont)
# name_variable <-
list_cont_df$realties$mappings$imovel$properties
# name_variable <-
list_cont_df$realties$mappings$imovel$properties
name_variable <-
list_cont_df$realties$mappings$imovel$properties
# check avaliable raw
name_variable
# check avaliable raw
name_variable
# check avaliable raw
name_variable %>%
map("type", extract)
name_variable
# check avaliable raw
name_variable %>%
map("fields", extract)
# check avaliable raw
name_variable %>%
map("fields", extract) %>%
map("raw", extract)
# check avaliable raw
name_variable %>%
map("fields", extract) %>%
map("raw", extract) %>%
flatten()
name_variable %>%
map("fields", extract) %>%
map("raw", extract)
# check avaliable raw
name_variable %>%
map("fields", extract) %>%
map("raw", extract) %>%
discard(is.null)
# check avaliable raw
name_variable %>%
map("fields", extract) %>%
map("raw", extract) %>%
discard(is.null) %>%
names()
# check avaliable raw
raw_variables <-
name_variable %>%
map("fields", extract) %>%
map("raw", extract) %>%
discard(is.null) %>%
names()
devtools::load_all()
devtools::document()
# Types variables
# variables <-
es.variable.type(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
devtools::load_all()
devtools::document()
# Types variables
# variables <-
es.variable.type(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database =  "mapi.digital",
table =  "realties"
)
devtools::load_all()
devtools::document()
devtools::test()
require(dplyr)
devtools::load_all()
devtools::document()
devtools::test()
require(dplyr)
data_1km <-
es.buffer(
size = 20000,
radius = "1km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential,
variable = c("valor", "area_util", "lat", "long", "tipo_negocio")
)
data_1km <-
es.buffer(
size = 20000,
buffer =  "1km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential,
variable = c("valor", "area_util", "lat", "long", "tipo_negocio")
)
devtools::load_all()
devtools::document()
devtools::test()
require(dplyr)
data_1km <-
es.buffer(
size = 20000,
buffer =  "1km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential,
variable = c("valor", "area_util", "lat", "long", "tipo_negocio")
)
data_1km <-
es.buffer(
size = 20000,
buffer =  "1km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential_realties,
variable = c("valor", "area_util", "lat", "long", "tipo_negocio")
)
data_1km
devtools::load_all()
devtools::document()
# es.buffer.ring <-
es.buffer.ring(
size = 20000,
buffer =  "1km",
ring = "3km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential_realties,
variable = c("valor", "area_util", "lat", "long", "tipo_negocio")
)
# es.buffer.ring <-
es.buffer.ring(
size = 20000,
buffer =  "1km",
ring = "3km",
longitude = "-49.2624773",
latitude = "-25.4288069",
credential = credential_realties,
variable = c("valor", "area_util", "latitude", "longitude", "tipo_negocio")
)
devtools::install_github("gabrielsartori/elasticR", force = TRUE)
devtools::load_all()
devtools::document()
# Certification database
credential_zoneamento <-
get.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
store = "mapi.digital",
data_collection = "zoneamentos"
)
require(dplyr)
# Certification database
credential_zoneamento <-
get.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
store = "mapi.digital",
data_collection = "zoneamentos"
)
# Certification database
credential_zoneamento <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
store = "mapi.digital",
data_collection = "zoneamentos"
)
# Certification database
credential_zoneamento <-
es.credential(
user = "normalizador",
passwd = "ND2SjGE+41E=@",
find_search = "search", # I need to find a reason
database  = "mapi.digital",
table = "zoneamentos"
)
credential_zoneamento
# get limit line data
zoneamento_cwb <-
all.data(credential = credential_zoneamento,
size = 1000)
# get limit line data
zoneamento_cwb <-
es.alldata(credential = credential_zoneamento,
size = 1000)
zoneamento_cwb$id <- 1:nrow(zoneamento_cwb)
zoneamento_df <- zoneamento_cwb %>% select(-geo)
es.polygon.r(base_geo = zoneamento_cwb$geo$coordinates,
var_id  = zoneamento_cwb$id,
merge_id = "id",
base_df = zoneamento_df)
es.polygon.r(data_geo =  zoneamento_cwb$geo$coordinates,
var_id  = zoneamento_cwb$id,
merge_id = "id",
data_df = zoneamento_df)
zoneamento_sf <-
es.polygon.r(data_geo =  zoneamento_cwb$geo$coordinates,
var_id  = zoneamento_cwb$id,
merge_id = "id",
data_df = zoneamento_df)
zoneamento_cwb %>% class()
zoneamento_cwb$geo
zoneamento_cwb$geo[[1]]
zoneamento_cwb$geo %>% class()
zoneamento_cwb$geo[[1]] %>% class()
zoneamento_cwb$geo[[1]] %>% head()
zoneamento_cwb$geo[[1]][1] %>% head()
zoneamento_cwb$geo[[1]][1]
zoneamento_cwb$geo[[1]]
zoneamento_cwb$geo[[1]][1][1]
zoneamento_cwb$geo[[1]][1][2] %>% head()
zoneamento_cwb$geo[[1]][2][] %>% head()
zoneamento_cwb$geo[[1]][2][1] %>% head()
zoneamento_cwb$geo$coordinates
zoneamento_cwb$geo %>% head() %>% glimpse()
install.packages("RPostgreSQL")
